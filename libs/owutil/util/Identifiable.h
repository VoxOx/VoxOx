/*
 * WengoPhone, a voice over Internet phone
 * Copyright (C) 2004-2006  Wengo
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */

#ifndef OWIDENTIFIEABLE_H
#define OWIDENTIFIEABLE_H

#include <util/owutildll.h>
#include <util/Cloneable.h>

#include <string>

/**
 * This has to be renamed to something else than Identifiable,
 * for example: Identifiable ;)
 *
 * An Identifiable object is uniquely identifieable via
 * its UUID.
 * Copying such an object will copy the UUID.
 * Comparing two Identifiable objects will compare the UUID.
 */


//VOXOX - JRT - 2009.04.24 
//	This use of the term UUID in this class is misleading at best.
//	A UUID is a well-defined entity generated such that is would
//	not be duplicated on any two computers.
//
//	IMO, we should use the term 'key' or a similar term.
//	'Keys' may be generated by using one or more existing memvars
//	of the derived class.  This makes more sense.

//	In most instances the getUUID() method is used to locate an
//	entry in a list.  A better method would be to find the list
//	entry from a complete object,
//	 eg findAccount( IMAccount& acct ) vs. findAccount( imaccount.getUUID() );
//	THIS keeps the best search logic encapsulated within each list class,
//	not exposed throughout the code base.
//
//	Therefore, I am making get/setUUID() private so I can more easily determine where it is used,
//	and adjust accordingly.
//End VoxOx

class OWUTIL_API Identifiable : public Cloneable {
public:

	 Identifiable();

	 Identifiable(const Identifiable & identifieable);

	 virtual Identifiable * clone() const;

	 virtual bool operator == (const Identifiable & identifieable) const;


protected:
	 void copy(const Identifiable & identifieable);

	 //VOXOX - JRT - 2009.07.14 - Make protected so we can access from derived classes as needed.
	 std::string getUUID() const;

private:
	 void setUUID(const std::string & uuid);

	std::string _uuid;
};

#endif //OWIDENTIFIEABLE_H
