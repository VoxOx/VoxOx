dnl Process this file with autoconf to produce a configure script.
AC_REVISION($Revision: 1.27 $)dnl
AC_PREREQ(2.50)
AC_INIT(include/eXosip/eXosip.h)

dnl require at least autoconf v 2.00
dnl AC_COPYRIGHT (COPYRIGHT-NOTICE)

AC_MSG_NOTICE([eXosip                       The Extended Open SIP library.])
AC_MSG_NOTICE([Copyright (C) 2002,2003,2004 Aymeric MOIZARD - <jack@atosc.org>])

dnl *********************************************************************
dnl Source packaging numbers
EXOSIP_MAJOR_VERSION=0
EXOSIP_MINOR_VERSION=9
EXOSIP_MICRO_VERSION=0

dnl program extension
EXOSIP_VERSION=$EXOSIP_MAJOR_VERSION.$EXOSIP_MINOR_VERSION.$EXOSIP_MICRO_VERSION

LIBEXOSIP_SO_VERSION=`expr $EXOSIP_MINOR_VERSION + $EXOSIP_MAJOR_VERSION`:$EXOSIP_MICRO_VERSION:$EXOSIP_MINOR_VERSION

AC_SUBST(LIBEXOSIP_SO_VERSION, $LIBEXOSIP_SO_VERSION)
AC_SUBST(EXOSIP_VERSION)

VERSION=$EXOSIP_VERSION
PACKAGE=eXosip

AC_MSG_RESULT([Configuring ${PACKAGE} ${VERSION}])
OS=`uname|sed -e 'y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/'`
AC_MSG_RESULT([Building Package on ${OS}])

dnl *********************************************************************
dnl Initialize automake stuff
AC_CONFIG_AUX_DIR(scripts)
AM_CONFIG_HEADER(config.h)
AM_INIT_AUTOMAKE($PACKAGE, $VERSION)
AM_ACLOCAL_INCLUDE(scripts)

AC_CANONICAL_HOST

AC_SUBST(ac_aux_dir)

dnl Checks for programs.

AC_PROG_CC
AC_PROG_CPP
AC_PROG_CXX
AC_PROG_INSTALL

dnl enable --enable-shared and --disable-shared options
LT_AC_PROG_SED
AC_PROG_LIBTOOL

#AC_ENABLE_SHARED(yes)

dnl declare --enable-* args and collect ac_help strings

AC_ARG_ENABLE(josua,
[  --enable-josua          compile josua.],
enable_josua=$enableval,enable_josua="yes")

AC_ARG_ENABLE(tools,
[  --enable-tools          compile tools programs.],
enable_tools=$enableval,enable_tools="yes")

AC_ARG_ENABLE(glib,
[  --enable-glib           compile josua with glib (yes).],
enable_glib=$enableval,enable_glib="yes")

AC_ARG_ENABLE(ms,
[  --enable-ms             compile with mediastreamer (yes).],
enable_ms=$enableval,enable_ms="yes")

AC_ARG_ENABLE(ortp,
[  --enable-ortp           compile for ortp only (no).],
enable_ortp=$enableval,enable_ortp="no")

AC_ARG_ENABLE(ucl,
[  --enable-ucl            compile for ucl only (no).],
enable_ucl=$enableval,enable_ucl="no")

AC_ARG_ENABLE(debug,
[  --enable-debug         turn on debugging (yes).],
enable_debug=$enableval,enable_debug="yes")

AC_ARG_ENABLE(trace,
[  --enable-trace         turn on trace (yes).],
enable_trace=$enableval,enable_trace="yes")

AC_ARG_ENABLE(mpatrol,
[  --enable-mpatrol        turn on memory leak detection with patrol.],
enable_mpatrol=$enableval,enable_mpatrol="no")

dnl support for linux-thread or posix thread (pthread.h)
AC_ARG_ENABLE(pthread,
[  --enable-pthread        enable support for POSIX threads. (autodetect)],
enable_pthread=$enableval,enable_pthread="no")

dnl support for semaphore.h (linux/sun...)
AC_ARG_ENABLE(semaphore,
[  --enable-semaphore      enable support for semaphore (semaphore.h)],
enable_semaphore=$enableval,enable_semaphore="no")

dnl support for sysV semaphore in sys/sem.h (BSD/linux...)
AC_ARG_ENABLE(sysv,
[  --enable-sysv           enable support for sysV semaphore (sys/sem.h).],
enable_sysv=$enableval,enable_sysv="no")

AC_ARG_ENABLE(ncurses,
[  --disable-ncurses       turn off ncurses support.],
disable_ncurses=$enableval,disable_ncurses="yes")

AC_ARG_ENABLE(ntimer,
[  --enable-ntimer         enable new timer facility. (default yes)],
enable_ntimer=$enableval,enable_ntimer="yes")

AC_ARG_ENABLE(phapi,
[  --disable-phapi       turn off phapi library generation.],
disable_phapi=$enableval,disable_phapi="no")

AC_ARG_ENABLE(miniua,
[  --enable-miniua          compile miniua.],
enable_miniua=$enableval,enable_miniua="no")

AC_ARG_ENABLE(embed,
[  --enable-embed          embed target.],
enable_embed=$enableval,enable_embed="no")

JOSUA_FLAGS="-DOSIP_AT_OSIP_DOT_ORG"

dnl compile with mt support
if test "x$enable_pthread" = "xyes"; then
  EXOSIP_FLAGS="-DHAVE_PTHREAD"
  EXOSIP_LIB="-lpthread"
else
  ACX_PTHREAD()
fi

EXOSIP_FLAGS="$EXOSIP_FLAGS -DOSIP_MT"

if test "x$enable_ucl" = "xyes"; then
  enable_glib="no"
  enable_ms="no"
  enable_ortp="no"
fi

if test "x$enable_ortp" = "xyes"; then
  enable_ms="no"
fi

if test "x$enable_phapi" != "xyes"; then
  enable_miniua="no"
fi

if test "x$enable_embed" = "xyes"; then
  enable_aec="no"
  enable_ilbc="no"
  enable_gsm="no"
  enable_amr="no"
else
  enable_aec="yes"
  enable_ilbc="yes"
  enable_gsm="yes"
  enable_amr="yes"
fi


AM_CONDITIONAL(COMPILE_JOSUA, test "x$enable_josua" = "xyes")
AM_CONDITIONAL(COMPILE_TOOLS, test "x$enable_tools" = "xyes")
AM_CONDITIONAL(ORTP_SUPPORT, test "x$enable_ortp" = "xyes")
AM_CONDITIONAL(UCL_SUPPORT, test "x$enable_ucl" = "xyes")
AM_CONDITIONAL(MEDIASTREAMER_SUPPORT, test "x$enable_ms" = "xyes")
AM_CONDITIONAL(GLIB_SUPPORT, test "x$enable_glib" = "xyes")
AM_CONDITIONAL(COMPILE_PHAPI, test "x$enable_phapi" = "xyes")
AM_CONDITIONAL(COMPILE_MINIUA, test "x$enable_miniua" = "xyes")
AM_CONDITIONAL(COMPILE_GSM, test "x$enable_gsm" = "xyes")
AM_CONDITIONAL(COMPILE_ILBC, test "x$enable_ilbc" = "xyes")
AM_CONDITIONAL(COMPILE_AMR, test "x$enable_amr" = "xyes")
AM_CONDITIONAL(AEC_SUPPORT, test "x$enable_aec" = "xyes")
AM_CONDITIONAL(EMBED_TARGET, test "x$enable_embed" = "xyes")

if test "x$enable_semaphore" = "xyes"; then
  EXOSIP_FLAGS="$EXOSIP_FLAGS -DHAVE_SEMAPHORE_H"
  AC_CHECK_HEADERS(semaphore.h)
elif test "x$enable_sysv" = "xyes"; then
  EXOSIP_FLAGS="$EXOSIP_FLAGS -UHAVE_SEMAPHORE_H -DHAVE_SYS_SEM_H"
  AC_CHECK_HEADERS(sys/sem.h)
else
  AC_CHECK_HEADERS(semaphore.h)
  AC_CHECK_HEADERS(sys/sem.h)
fi

case $OS in
  linux*)
     EXOSIP_FLAGS="$EXOSIP_FLAGS -pedantic"
     ;;
  irix*)
     ;;
  hpux* | hp-ux*)
     ;;
  aix*)
     ;;
  osf*)
     AC_CHECK_LIB(rt,sem_open,[JOSUA_LIB="$JOSUA_LIB -lrt"])
     AC_CHECK_LIB(rt,sem_open,[EXOSIP_LIB="$EXOSIP_LIB -lrt"])
     ;;
  sunos*)
     ;;
  darwin*)
     EXOSIP_FLAGS="$EXOSIP_FLAGS -pedantic"
     ;;
  *)
     ;;
esac

if test "x$enable_debug" = "xyes"; then
  EXOSIP_FLAGS="$EXOSIP_FLAGS -DENABLE_DEBUG -g"
  CFLAGS=`echo $CFLAGS | sed 's/-O.//'`
fi

if test "x$enable_trace" = "xyes"; then
  EXOSIP_FLAGS="$EXOSIP_FLAGS -DENABLE_TRACE"
fi

if test "x$enable_mpatrol" = "xyes"; then
  EXOSIP_FLAGS="$EXOSIP_FLAGS -DENABLE_MPATROL"
  EXOSIP_LIB="$EXOSIP_LIB -lmpatrolmt -lbfd -lelf"
fi

if test "x$enable_ntimer" = "xyes"; then
  EXOSIP_FLAGS="$EXOSIP_FLAGS -DNEW_TIMER"
fi

if test "x$disable_gsm" = "xyes"; then
  EXOSIP_FLAGS="$EXOSIP_FLAGS -DNO_GSM"
fi
if test "x$disable_ilbc" = "xyes"; then
  EXOSIP_FLAGS="$EXOSIP_FLAGS -DNO_ILBC"
fi

dnl Checks for libraries.
AC_CHECK_LIB(posix4,sem_open,[EXOSIP_LIB="$EXOSIP_LIB -lposix4 -mt"])
AC_CHECK_LIB(nsl,nis_add,[EXOSIP_LIB="$EXOSIP_LIB -lnsl"])
AC_CHECK_LIB(socket,sendto,[EXOSIP_LIB="$EXOSIP_LIB -lsocket"])
AC_CHECK_LIB(rt,clock_gettime,[JOSUA_LIB="$JOSUA_LIB -lrt"])
AC_CHECK_LIB(rt,clock_gettime,[EXOSIP_LIB="$EXOSIP_LIB -lrt"])

if test "x$enable_josua" = "xyes"; then
  JOSUA_FLAGS="$JOSUA_FLAGS -DNCURSES_SUPPORT"
  AC_CHECK_LIB(ncurses,wgetch,[JOSUA_LIB="-lncurses"])
  AC_CHECK_HEADERS(ncurses.h)
fi

EXOSIP_FLAGS="$EXOSIP_FLAGS -DUSE_TMP_BUFFER"

AC_CACHE_CHECK([whether -Wall works], Wall_flag, [
  saved_CPPFLAGS=$CPPFLAGS
  CPPFLAGS="-Wall"
  AC_TRY_COMPILE(, , Wall_flag=yes, Wall_flag=no)
  CPPFLAGS=$saved_CPPFLAGS
])

if test "x$Wall_flag" = xyes; then
  CPPFLAGS="$CPPFLAGS -Wall"
fi

AC_CACHE_CHECK([whether -Wcast-align works], Wcast_align_flag, [
  saved_CPPFLAGS=$CPPFLAGS
  CPPFLAGS="-Wcast-align"
  AC_TRY_COMPILE(, , Wcast_align_flag=yes, Wcast_align_flag=no)
  CPPFLAGS=$saved_CPPFLAGS
])

if test "x$Wcast_align_flag" = xyes; then
  CPPFLAGS="$CPPFLAGS -Wcast-align"
fi

AC_CACHE_CHECK([whether -Wchar-subscripts works], Wchar_subscripts_flag, [
  saved_CPPFLAGS=$CPPFLAGS
  CPPFLAGS="-Wchar-subscripts"
  AC_TRY_COMPILE(, , Wchar_subscripts_flag=yes, Wchar_subscripts_flag=no)
  CPPFLAGS=$saved_CPPFLAGS
])

if test "x$Wchar_subscripts_flag" = xyes; then
  CPPFLAGS="$CPPFLAGS -Wchar-subscripts"
fi

AC_CACHE_CHECK([whether -Wformat works], Wformat_flag, [
  saved_CPPFLAGS=$CPPFLAGS
  CPPFLAGS="-Wformat"
  AC_TRY_COMPILE(, , Wformat_flag=yes, Wformat_flag=no)
  CPPFLAGS=$saved_CPPFLAGS
])

if test "x$Wformat_flag" = xyes; then
  CPPFLAGS="$CPPFLAGS -Wformat"
fi

AC_CACHE_CHECK([whether -Winline works], Winline_flag, [
  saved_CPPFLAGS=$CPPFLAGS
  CPPFLAGS="-Winline"
  AC_TRY_COMPILE(, , Winline_flag=yes, Winline_flag=no)
  CPPFLAGS=$saved_CPPFLAGS
])

if test "x$Winline_flag" = xyes; then
  CPPFLAGS="$CPPFLAGS -Winline"
fi

AC_CACHE_CHECK([whether -Wmissing-declarations works], Wmissing_declarations_flag, [
  saved_CPPFLAGS=$CPPFLAGS
  CPPFLAGS="-Wmissing-declarations"
  AC_TRY_COMPILE(, , Wmissing_declarations_flag=yes, Wmissing_declarations_flag=no)
  CPPFLAGS=$saved_CPPFLAGS
])

if test "x$Wmissing_declarations_flag" = xyes; then
  CPPFLAGS="$CPPFLAGS -Wmissing-declarations"
fi

AC_CACHE_CHECK([whether -Wmissing-prototypes works], Wmissing_prototypes_flag, [
  saved_CPPFLAGS=$CPPFLAGS
  CPPFLAGS="-Wmissing-prototypes"
  AC_TRY_COMPILE(, , Wmissing_prototypes_flag=yes, Wmissing_prototypes_flag=no)
  CPPFLAGS=$saved_CPPFLAGS
])

if test "x$Wmissing_prototypes_flag" = xyes; then
  CPPFLAGS="$CPPFLAGS -Wmissing-prototypes"
fi

AC_CACHE_CHECK([whether -Wnested-externs works], Wnested_externs_flag, [
  saved_CPPFLAGS=$CPPFLAGS
  CPPFLAGS="-Wnested-externs"
  AC_TRY_COMPILE(, , Wnested_externs_flag=yes, Wnested_externs_flag=no)
  CPPFLAGS=$saved_CPPFLAGS
])

if test "x$Wnested_externs_flag" = xyes; then
  CPPFLAGS="$CPPFLAGS -Wnested-externs"
fi

AC_CACHE_CHECK([whether -Wpointer-arith works], Wpointer_arith_flag, [
  saved_CPPFLAGS=$CPPFLAGS
  CPPFLAGS="-Wpointer-arith"
  AC_TRY_COMPILE(, , Wpointer_arith_flag=yes, Wpointer_arith_flag=no)
  CPPFLAGS=$saved_CPPFLAGS
])

if test "x$Wpointer_arith_flag" = xyes; then
  CPPFLAGS="$CPPFLAGS -Wpointer-arith"
fi

AC_SUBST(EXOSIP_FLAGS)
AC_SUBST(JOSUA_FLAGS)
AC_SUBST(JOSUA_LIB)
AC_SUBST(EXOSIP_LIB)

AC_SUBST(CFLAGS)

dnl Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS(ctype.h)
AC_CHECK_HEADERS(string.h)
AC_CHECK_HEADERS(strings.h)
AC_CHECK_HEADERS(stdio.h)
AC_CHECK_HEADERS(stdlib.h)
AC_CHECK_HEADERS(unistd.h)
AC_CHECK_HEADERS(stdarg.h)
AC_CHECK_HEADERS(varargs.h)
AC_CHECK_HEADERS(sys/time.h)
AC_CHECK_HEADERS(assert.h)
AC_CHECK_HEADERS(signal.h)
AC_CHECK_HEADERS(sys/signal.h)
AC_CHECK_HEADERS(malloc.h)
AC_CHECK_HEADERS(sys/select.h)
AC_CHECK_HEADERS(sys/types.h)
AC_CHECK_HEADERS(fcntl.h)
AC_CHECK_HEADERS(sys/soundcard.h)

AC_OUTPUT(
 Makefile
 scripts/Makefile
 platform/Makefile
 platform/windows/Makefile
 include/Makefile
 include/eXosip/Makefile
 src/Makefile
 josua/Makefile
 tools/Makefile 
 phapi/Makefile
 phapi/amrwb/Makefile
 phapi/amrnb/Makefile
 phapi/amr/Makefile
 phapi/gsm/Makefile
 phapi/ilbc/Makefile
 miniua/Makefile
 minims/Makefile
)

